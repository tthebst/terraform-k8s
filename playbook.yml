- name: setup master
  hosts: gcp_function_master
  remote_user: tgretler
  vars:
    service_account_file: ./terraform-test-key.json
    project: terraform-test-270912
    auth_kind: serviceaccount
    scopes:
      - https://www.googleapis.com/auth/compute
  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      become: yes


    - name: download docker script
      get_url:
        url: https://get.docker.com
        dest: ~/get-docker.sh 
        mode: '0777'
      become: yes

    - name: Execute docker installl script
      command: sh ~/get-docker.sh 
      become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
      become: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --ignore-preflight-errors=all --apiserver-advertise-address={{ hostvars[inventory_hostname].networkInterfaces[0].networkIP }} --apiserver-cert-extra-sans={{ hostvars[inventory_hostname].networkInterfaces[0].networkIP }}  --node-name {{ hostvars[inventory_hostname].name }} --pod-network-cidr=10.2.0.0/24
      become: yes

    - name: setup k8s

      copy: 
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/tgretler
        force: yes
      become: yes

    - name: id id user
      command: id -u
      register: id_user
    - name: id group
      command: id -g
      register: id_group




    - name: add kubeconfig to env variables
      lineinfile:
        line: export KUBECONFIG=/home/tgretler/admin.conf
        path: /home/tgretler/.profile



    - name: ahahhahhah
      shell: shell source /home/tgretler/.bashrc
      sudo: no

    - name: Install calico pod network
      become: false
      command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml


    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
      become: yes


    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
      become: yes








- name: setup workers
  hosts: gcp_function_worker
  remote_user: tgretler
  vars:
    service_account_file: ./terraform-test-key.json
    project: terraform-test-270912
    auth_kind: serviceaccount
    scopes:
      - https://www.googleapis.com/auth/compute

  tasks:

    - name: test
      command: echo {{ hostvars[inventory_hostname].name }}
      register: hello

    - debug: msg="{{ hello.stdout }}"

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      become: yes


    - name: download docker script
      get_url:
        url: https://get.docker.com
        dest: ~/get-docker.sh 
        mode: '0777'
      become: yes

    - name: Execute docker installl script
      command: sh ~/get-docker.sh 
      become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
      become: yes


    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes

    - name: Install calico pod network
      become: false
      command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml
      become: yes

    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777
      become: yes

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
      become: yes









