- name: setup master
  hosts: gcp_function_master
  remote_user: tgretler
  vars:
    service_account_file: ./terraform-test-key.json
    project: terraform-test-270912
    auth_kind: serviceaccount
    scopes:
      - https://www.googleapis.com/auth/compute
  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: fixed
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      become: yes

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
      become: yes

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      notify:
        - docker status
      become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
      become: yes


    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ hostvars[inventory_hostname].networkInterfaces[0].networkIP }}
        create: yes
      become: yes
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --ignore-preflight-errors=all --apiserver-advertise-address={{ hostvars[inventory_hostname].networkInterfaces[0].networkIP }} --apiserver-cert-extra-sans={{ hostvars[inventory_hostname].networkInterfaces[0].networkIP }}  --node-name {{ hostvars[inventory_hostname].name }} --pod-network-cidr=10.2.0.0/24
      become: yes


    - name: Setup kubeconfig for vagrant user
      command: mkdir -p /home/tgretler/.kube
      become: yes

    - name: Copy a new "sudoers" file into place, after passing validation with visudo
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/tgretler/.kube/config
        remote_src: yes
      become: yes

    - name: Setup kubeconfig for vagrant user
      command: chown tgretler:tgretler /home/tgretler/.kube/config
      become: yes


    - name: k8s version
      shell: kubectl version | base64 | tr -d '\n'
      register: version 
              
    - debug:  "{{ version.stdout }}"


    - name: Install waeve pod network
      become: false
      command: kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ version.stdout }}


    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
      become: yes

    - debug:  "{{ join_command.stdout[0] }}"
    - debug:  "{{ join_command.stdout }}"

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="/Users/tgretler/scratch/join-command"
      become: yes
  handlers:
      - name: docker status
        service: name=docker state=started






- name: setup workers
  hosts: gcp_function_worker
  remote_user: tgretler
  vars:
    service_account_file: ./terraform-test-key.json
    project: terraform-test-270912
    auth_kind: serviceaccount
    scopes:
      - https://www.googleapis.com/auth/compute

  tasks:

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      become: yes

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
      become: yes

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: fixed
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      notify:
        - docker status
      become: yes



    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
      become: yes


    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes


    - name: Copy the join command to server location
      copy: src=/Users/tgretler/scratch/join-command dest=/tmp/join-command.sh mode=0777
      become: yes

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
      become: yes
  handlers:
      - name: docker status
        service: name=docker state=started







